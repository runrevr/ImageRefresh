Create a new file: client/src/components/ImageGenerationConfig.tsx

```tsx
import React, { useState } from 'react';
import styles from '../styles/ImageGenerationConfig.module.css';

interface ImageGenerationConfigProps {
  initialPrompt?: string;
  onGenerate: (config: {
    prompt: string;
    size: string;
    style: string;
  }) => void;
  onBack?: () => void;
}

const ImageGenerationConfig: React.FC<ImageGenerationConfigProps> = ({ 
  initialPrompt = '', 
  onGenerate,
  onBack 
}) => {
  const [prompt, setPrompt] = useState(initialPrompt);
  const [selectedSize, setSelectedSize] = useState('1024x1024');
  const [selectedStyle, setSelectedStyle] = useState('professional');
  const [isVisible, setIsVisible] = useState(false);

  React.useEffect(() => {
    setTimeout(() => setIsVisible(true), 50);
  }, []);

  return (
    <div className={`${styles.container} ${isVisible ? styles.visible : ''}`}>
      <div className={styles.header}>
        {onBack && (
          <button className={styles.backButton} onClick={onBack}>
            ← Back
          </button>
        )}
        <h1>Perfect Your Vision</h1>
        <p>Fine-tune your idea with AI assistance and professional options</p>
      </div>

      <div className={styles.progressBar}>
        <div className={styles.progressStep}>1. Describe</div>
        <div className={`${styles.progressStep} ${styles.active}`}>2. Customize</div>
        <div className={styles.progressStep}>3. Generate</div>
      </div>

      <div className={styles.mainCard}>
        <div className={styles.promptSection}>
          <div className={styles.promptHeader}>
            <h2>Your Vision</h2>
            <span className={styles.promptLength}>{prompt.length} characters</span>
          </div>
          <textarea 
            className={styles.promptTextarea}
            value={prompt}
            onChange={(e) => setPrompt(e.target.value)}
            placeholder="Describe what you need..."
            rows={3}
          />
        </div>

        {/* Add more sections here */}
        
        <div className={styles.generateSection}>
          <button 
            className={styles.generateButton}
            onClick={() => onGenerate({
              prompt,
              size: selectedSize,
              style: selectedStyle
            })}
          >
            <span className={styles.generateIcon}>⚡</span>
            <span>Generate My Image</span>
          </button>
        </div>
      </div>
    </div>
  );
};

export default ImageGenerationConfig;