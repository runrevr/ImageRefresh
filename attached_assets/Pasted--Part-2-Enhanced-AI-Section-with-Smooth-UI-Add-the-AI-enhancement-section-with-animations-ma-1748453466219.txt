---

## Part 2: Enhanced AI Section with Smooth UI
Add the AI enhancement section with animations matching the input page style.

Add this enhanced AI section to ImageGenerationConfig.jsx:

jsxconst [showAISuggestions, setShowAISuggestions] = useState(false);
const [aiSuggestions, setAiSuggestions] = useState([]);
const [loadingAI, setLoadingAI] = useState(false);
const [selectedSuggestion, setSelectedSuggestion] = useState(null);

// Add sparkle animation for AI button
const enhanceWithAI = async () => {
  setLoadingAI(true);
  // Simulate AI enhancement
  setTimeout(() => {
    const basePrompt = prompt;
    setAiSuggestions([
      {
        id: 1,
        type: 'Professional',
        icon: 'ðŸ’¼',
        text: `${basePrompt}, professional photography, perfect lighting, high-end commercial quality, sharp focus`,
        tags: ['Studio Quality', 'Commercial Ready', 'High Resolution']
      },
      {
        id: 2,
        type: 'Creative',
        icon: 'ðŸŽ¨',
        text: `${basePrompt}, artistic interpretation, creative composition, unique perspective, award-winning style`,
        tags: ['Artistic', 'Unique Style', 'Creative Vision']
      },
      {
        id: 3,
        type: 'Photorealistic',
        icon: 'ðŸ“¸',
        text: `${basePrompt}, ultra-realistic, natural lighting, authentic details, lifelike quality`,
        tags: ['Realistic', 'Natural', 'Authentic']
      }
    ]);
    setShowAISuggestions(true);
    setLoadingAI(false);
  }, 1500);
};

// Add this after the promptTextarea:
<div className={styles.aiSection}>
  <button 
    className={`${styles.aiButton} ${loadingAI ? styles.loading : ''}`}
    onClick={enhanceWithAI}
    disabled={loadingAI || !prompt}
  >
    <span className={styles.aiButtonIcon}>âœ¨</span>
    <span className={styles.aiButtonText}>
      {loadingAI ? 'AI is thinking...' : 'Enhance with AI Magic'}
    </span>
    {loadingAI && <span className={styles.aiLoader}></span>}
  </button>
  
  {showAISuggestions && (
    <div className={styles.suggestionsContainer}>
      <div className={styles.suggestionsHeader}>
        <h3>AI-Enhanced Versions</h3>
        <button 
          className={styles.closeSuggestions}
          onClick={() => setShowAISuggestions(false)}
        >
          âœ•
        </button>
      </div>
      
      <div className={styles.suggestionsGrid}>
        {aiSuggestions.map(suggestion => (
          <div 
            key={suggestion.id}
            className={`${styles.suggestionCard} ${selectedSuggestion === suggestion.id ? styles.selected : ''}`}
            onClick={() => {
              setSelectedSuggestion(suggestion.id);
              setPrompt(suggestion.text);
            }}
          >
            <div className={styles.suggestionHeader}>
              <span className={styles.suggestionIcon}>{suggestion.icon}</span>
              <span className={styles.suggestionType}>{suggestion.type}</span>
            </div>
            <p className={styles.suggestionText}>{suggestion.text}</p>
            <div className={styles.suggestionTags}>
              {suggestion.tags.map(tag => (
                <span key={tag} className={styles.tag}>{tag}</span>
              ))}
            </div>
            <div className={styles.useButton}>
              {selectedSuggestion === suggestion.id ? 'âœ“ Selected' : 'Use This'}
            </div>
          </div>
        ))}
      </div>
    </div>
  )}
</div>